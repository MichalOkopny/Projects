CREATE DATABASE HealthTracker;

USE HealthTracker;

CREATE TABLE Users (
  user_id INT NOT NULL AUTO_INCREMENT,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL,
  PRIMARY KEY (user_id)
);

CREATE TABLE Activities (
  activity_id INT NOT NULL AUTO_INCREMENT,
  name VARCHAR(255) NOT NULL,
  PRIMARY KEY (activity_id)
);

CREATE TABLE Measurements (
  measurement_id INT NOT NULL AUTO_INCREMENT,
  user_id INT NOT NULL,
  activity_id INT NOT NULL,
  date DATE NOT NULL,
  value FLOAT NOT NULL,
  PRIMARY KEY (measurement_id),
  FOREIGN KEY (user_id) REFERENCES Users(user_id),
  FOREIGN KEY (activity_id) REFERENCES Activities(activity_id)
);
------------------------------------------------------------

INSERT INTO Users (name, email) VALUES
('John Smith', 'john.smith@example.com'),
('Jane Doe', 'jane.doe@example.com'),
('Bob Johnson', 'bob.johnson@example.com');

INSERT INTO Activities (name) VALUES
('Steps'),
('Weight');

INSERT INTO Measurements (user_id, activity_id, date, value) VALUES
(1, 1, '2023-04-01', 5000),
(1, 1, '2023-04-02', 6000),
(1, 1, '2023-04-03', 7000),
(2, 1, '2023-04-01', 10000),
(2, 1, '2023-04-02', 8000),
(2, 1, '2023-04-03', 9000),
(1, 2, '2023-04-01', 150),
(1, 2, '2023-04-03', 145),
(2, 2, '2023-04-01', 200),
(2, 2, '2023-04-03', 190);
----------------------------------------------------------------

-- Average number of steps per user
SELECT Users.name, AVG(Measurements.value) AS avg_steps
FROM Measurements
JOIN Users ON Measurements.user_id = Users.user_id
WHERE Activities.name = 'Steps'
GROUP BY Users.name;

-- Minimum and maximum weight for each user
SELECT Users.name, MIN(Measurements.value) AS min_weight, MAX(Measurements.value) AS max_weight
FROM Measurements
JOIN Users ON Measurements.user_id = Users.user_id
WHERE Activities.name = 'Weight'
GROUP BY Users.name;

-- Number of steps per day for a specific user
SELECT date, value AS steps
FROM Measurements
WHERE user_id = 1 AND activity_id = 1
ORDER BY date;

